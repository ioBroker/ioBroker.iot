{"version":3,"file":"notifications.js","sourceRoot":"","sources":["../../src/lib/notifications.ts"],"names":[],"mappings":";;AAkBA,oEAwBC;AA1CD;;;;;GAKG;AACH,SAAS,gBAAgB,CAAC,QAA2C;IACjE,MAAM,aAAa,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAEzE,OAAO,GAAG,IAAI,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,CAAC,cAAc,EAAE,IAAI,aAAa,CAAC,OAAO,EAAE,CAAC;AACrF,CAAC;AAED;;;;;GAKG;AACH,SAAgB,4BAA4B,CAAC,OAO5C;IAIG,MAAM,OAAO,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC;IACtC,MAAM,EAAE,SAAS,EAAE,GAAG,OAAO,CAAC,QAAQ,CAAC;IAEvC,MAAM,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,GAAG,CACnD,CAAC,CAAC,QAAQ,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,GAAG,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC,MAAM,CAAC,KAAK,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,CAChH,CAAC;IAEF,MAAM,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,WAAW;EAC9C,OAAO,CAAC,IAAI;EACZ,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;KACzB,CAAC;IAEF,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC7C,CAAC","sourcesContent":["/**\n * Extract the newest message out of a notification messages together with the localized date\n *\n * @param messages all messages in current notification\n * @returns string\n */\nfunction getNewestMessage(messages: { ts: number; message: string }[]): string {\n    const newestMessage = messages.sort((a, b) => (a.ts < b.ts ? 1 : -1))[0];\n\n    return `${new Date(newestMessage.ts).toLocaleString()} ${newestMessage.message}`;\n}\n\n/**\n * Build up a mail object from the notification message\n *\n * @param message received message from notification manager\n * @returns message to send to app\n */\nexport function buildMessageFromNotification(message: {\n    category: {\n        name: string;\n        instances: { [instance: string]: { messages: { ts: number; message: string }[] } };\n        description: string;\n    };\n    host: string;\n}): {\n    title: string;\n    message: string;\n} {\n    const subject = message.category.name;\n    const { instances } = message.category;\n\n    const readableInstances = Object.entries(instances).map(\n        ([instance, entry]) => `${instance.substring('system.adapter.'.length)}: ${getNewestMessage(entry.messages)}`,\n    );\n\n    const text = `${message.category.description}\n${message.host}:\n${readableInstances.join('\\n')}\n    `;\n\n    return { title: subject, message: text };\n}\n"]}