{"version":3,"file":"IotProxy.js","sourceRoot":"","sources":["../../../../src/lib/AlexaSmartHomeV3/Helpers/IotProxy.ts"],"names":[],"mappings":";;AAGA,MAAqB,QAAQ;IACzB,MAAM,CAAC,MAAM,CAAe;IAC5B,MAAM,CAAC,iBAAiB,CAAS;IACjC,MAAM,CAAC,KAAK,CAAS;IAErB,MAAM,CAAC,IAAI,CAAC,MAAoB,EAAE,QAAgB,EAAE,KAAa;QAC7D,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,QAAQ,CAAC,iBAAiB,GAAG,YAAY,QAAQ,eAAe,CAAC;QACjE,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IAED,MAAM,CAAC,kBAAkB,CAAC,WAA0B;QAChD,2CAA2C;QAC3C,IAAI,WAAW,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAC;YAC9B,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;QACxD,CAAC;QACD,OAAO,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,iBAAiB,EAAE,WAAW,CAAC,CAAC;IACrE,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,KAAa,EAAE,OAA+B;QACzD,IAAI,OAAO,OAAO,KAAK,QAAQ,EAAE,CAAC;YAC9B,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QACtC,CAAC;QACD,UAAU,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,EAAE,OAAO,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC,MAAc,EAAQ,EAAE,GAAE,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC;IAC9G,CAAC;CACJ;AAzBD,2BAyBC","sourcesContent":["import type { device as DeviceModule } from 'aws-iot-device-sdk';\nimport type AlexaResponse from '../Alexa/AlexaResponse';\n\nexport default class IotProxy {\n    static device: DeviceModule;\n    static stateChangedTopic: string;\n    static login: string;\n\n    static init(device: DeviceModule, clientId: string, login: string): void {\n        IotProxy.device = device;\n        IotProxy.stateChangedTopic = `response/${clientId}/changeReport`;\n        this.login = login;\n    }\n\n    static publishStateChange(stateChange: AlexaResponse): void {\n        // replace INVALID token with the client id\n        if (stateChange.event?.endpoint) {\n            stateChange.event.endpoint.scope.token = this.login;\n        }\n        return IotProxy.publish(IotProxy.stateChangedTopic, stateChange);\n    }\n\n    static publish(topic: string, message: AlexaResponse | string): void {\n        if (typeof message !== 'string') {\n            message = JSON.stringify(message);\n        }\n        setTimeout(() => IotProxy.device?.publish(topic, message, { qos: 0 }, (_error?: Error): void => {}), 100);\n    }\n}\n"]}