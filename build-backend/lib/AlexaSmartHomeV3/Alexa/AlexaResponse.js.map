{"version":3,"file":"AlexaResponse.js","sourceRoot":"","sources":["../../../../src/lib/AlexaSmartHomeV3/Alexa/AlexaResponse.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+BAAoC;AACpC,wDAA0C;AAc1C;;GAEG;AACH,MAAqB,aAAa;IACvB,OAAO,CAEZ;IAEK,UAAU,GAAG,GAAG,CAAC;IAER,KAAK,CAAoB;IAEzC,MAAM,CAAC,iBAAiB,GAAyB,eAAe,CAAC;IAEjE,MAAM,CAAC,eAAe,CAAC,QAAuB;QAC1C,OAAO,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,KAAK,aAAa,CAAC,iBAAiB,CAAC;IAC7E,CAAC;IAED,MAAM,CAAC,aAAa,CAAC,SAAiB,EAAE,OAAY;QAChD,OAAO,IAAI,aAAa,CAAC;YACrB,IAAI,EAAE,aAAa,CAAC,iBAAiB;YACrC,OAAO;YACP,SAAS;SACZ,CAAC,CAAC;IACP,CAAC;IAED,MAAM,CAAC,mBAAmB,CAAC,SAAiB;QACxC,OAAO,aAAa,CAAC,aAAa,CAAC,SAAS,EAAE;YAC1C,IAAI,EAAE,sBAAsB;YAC5B,OAAO,EAAE,2BAA2B;SACvC,CAAC,CAAC;IACP,CAAC;IAED,MAAM,CAAC,8BAA8B,CACjC,WAAmB,EACnB,SAA2B,EAC3B,SAAiB,EACjB,cAAsB;QAEtB,OAAO,aAAa,CAAC,aAAa,CAAC,SAAS,EAAE;YAC1C,IAAI,EAAE,gBAAgB;YACtB,OAAO,EAAE,WAAW,WAAW,wBAAwB,SAAS,wBAAwB,cAAc,EAAE;SAC3G,CAAC,CAAC;IACP,CAAC;IAED,MAAM,CAAC,6BAA6B,CAChC,UAAkB,EAClB,SAA2B,EAC3B,SAAiB,EACjB,cAAsB;QAEtB,OAAO,aAAa,CAAC,aAAa,CAAC,SAAS,EAAE;YAC1C,IAAI,EAAE,gBAAgB;YACtB,OAAO,EAAE,UAAU,UAAU,wBAAwB,SAAS,wBAAwB,cAAc,EAAE;SACzG,CAAC,CAAC;IACP,CAAC;IAED,MAAM,CAAC,mBAAmB,CAAC,SAAiB,EAAE,UAAyC;QACnF,OAAO,aAAa,CAAC,aAAa,CAAC,SAAS,EAAE;YAC1C,IAAI,EAAE,gBAAgB;YACtB,OAAO,EAAE,uBAAuB,UAAU,QAAQ;SACrD,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,OAAO,CAAC,KAAqB,EAAE,YAAoB,EAAE,KAAU,EAAE,gBAAyB;QAC7F,MAAM,QAAQ,GAAG,IAAI,aAAa,CAAC;YAC/B,gBAAgB,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,gBAAgB;YAC5D,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK;YAC/C,UAAU,EAAE,KAAK,EAAE,SAAS,EAAE,QAAQ,EAAE,UAAU;YAClD,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS;SACjD,CAAC,CAAC;QAEH,QAAQ,CAAC,kBAAkB,CAAC;YACxB,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS;YAC9C,IAAI,EAAE,YAAY;YAClB,QAAQ,EAAE,gBAAgB;YAC1B,KAAK;SACR,CAAC,CAAC;QAEH,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED;;;;OAIG;IACH,YAAY,IAcX;QACG,IAAI,KAAK,EAAE,CAAC;QAEZ,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACvE,CAAC;QAED,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE,CAAC;YAC3B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;QACnE,CAAC;aAAM,CAAC;YACJ,IAAI,CAAC,KAAK,GAAG;gBACT,MAAM,EAAE;oBACJ,SAAS,EAAE,KAAK,CAAC,oBAAoB,CAAmB,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC;oBAChF,IAAI,EAAE,KAAK,CAAC,oBAAoB,CAAuB,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC;oBAC7E,SAAS,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAA,SAAM,GAAE,CAAC;oBAC/D,gBAAgB,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,EAAE,SAAS,CAAC;oBAC9E,cAAc,EAAE,KAAK,CAAC,oBAAoB,CAAM,IAAI,CAAC,cAAc,EAAE,GAAG,CAAC;iBAC5E;gBACD,QAAQ,EAAE;oBACN,KAAK,EAAE;wBACH,IAAI,EAAE,aAAa;wBACnB,KAAK,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,SAAS,CAAC;qBAC3D;oBACD,UAAU,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,SAAS,CAAC;iBACrE;gBACD,OAAO,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,EAAE,EAAE,CAAC;aACxD,CAAC;YAEF,IAAI,IAAI,CAAC,eAAe,EAAE,CAAC;gBACvB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,GAAG;oBACxB,KAAK,EAAE;wBACH,IAAI,EAAE,IAAI,CAAC,eAAe;qBAC7B;oBACD,UAAU,EAAE,EAAE;iBACjB,CAAC;YACN,CAAC;QACL,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAC5C,CAAC;QAED,oDAAoD;QACpD,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,sBAAsB,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,KAAK,mBAAmB,EAAE,CAAC;YACtG,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;QAC/B,CAAC;IACL,CAAC;IAED,UAAU;QACN,IAAI,CAAC,OAAO,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;IACxC,CAAC;IAED;;;;OAIG;IACH,kBAAkB,CAAC,IAOlB;QACG,IAAI,CAAC,UAAU,EAAE,CAAC;QAElB,MAAM,QAAQ,GAAG;YACb,SAAS,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,EAAE,sBAAsB,CAAC;YAC7E,QAAQ,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC;YAC9D,IAAI,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC;YAC3D,KAAK,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;YAC9D,YAAY,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YACrF,yBAAyB,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC;SAC3F,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACrB,OAAO,QAAQ,CAAC,QAAQ,CAAC;QAC7B,CAAC;QAED,IAAI,CAAC,OAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAED;;;;OAIG;IACH,wBAAwB,CAAC,IAA4B;QACjD,IAAI,KAAK,EAA4B,CAAC;QAEtC,MAAM,QAAQ,GAAG;YACb,SAAS,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,EAAE,sBAAsB,CAAC;YAC7E,QAAQ,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC;YAC9D,IAAI,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,cAAc,CAAC;YAC3D,KAAK,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC;YAC9D,YAAY,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;YACrF,yBAAyB,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,yBAAyB,EAAE,CAAC,CAAC;SAC3F,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACrB,OAAO,QAAQ,CAAC,QAAQ,CAAC;QAC7B,CAAC;QAED,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAC5C,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,KAAK,EAAE,UAAU,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,iBAAiB,EAAE,EAAE,CAAC;QAErF,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC;IAED,MAAM,CAAC,eAAe;QAClB,OAAO;YACH;gBACI,IAAI,EAAE,gBAAgB;gBACtB,SAAS,EAAE,OAAO;gBAClB,OAAO,EAAE,GAAG;aACf;SACJ,CAAC;IACN,CAAC;IAED;;;;OAIG;IACH,kBAAkB,CAAC,IAA8B;QAC7C,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,CAAC;YACd,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;QAC5C,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,KAAK,EAAE,CAAC;QAEpC,IAAI,KAAK,EAA8B,CAAC;QAExC,2DAA2D;QAC3D,MAAM,QAAQ,GAA6B;YACvC,UAAU,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,oBAAoB,CAAC;YAC7E,gBAAgB,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,EAAE,gBAAgB,CAAC;YACrF,WAAW,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,WAAW,EAAE,+BAA+B,CAAC;YAC1F,YAAY,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,YAAY,EAAE,wBAAwB,CAAC;YACrF,iBAAiB,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,OAAO,CAAC,CAAC;YAChF,YAAY,EAAE,aAAa,CAAC,eAAe,EAAE,CAAC,MAAM,CAChD,KAAK,CAAC,oBAAoB,CAAsB,IAAI,CAAC,YAAY,EAAE,EAAE,CAAC,CACzE;YACD,MAAM,EAAE,SAAS;SACpB,CAAC;QAEF,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC;YACvD,QAAQ,CAAC,MAAM,GAAG,KAAK,CAAC,oBAAoB,CAAyB,IAAI,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAC1F,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChD,CAAC;IAED;;;;OAIG;IACH,oBAAoB,CAAC,IAAwB;QACzC,IAAI,KAAK,EAAuB,CAAC;QAEjC,MAAM,QAAQ,GAAG;YACb,IAAI,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,EAAE,gBAAgB,CAAC;YAC7D,SAAS,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC;YAC9D,OAAO,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,OAAO,EAAE,GAAG,CAAC;YACtD,UAAU,EAAE,KAAK,CAAC,oBAAoB,CAMlC,IAAI,CAAC,UAAU,EACf,EAKC,CACJ;YACD,+CAA+C;YAC/C,QAAQ,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC;YAC9D,aAAa,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,aAAa,EAAE,SAAS,CAAC;YACxE,SAAS,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC;YAChE,mBAAmB,EAAE,KAAK,CAAC,oBAAoB,CAAC,IAAI,CAAC,mBAAmB,EAAE,SAAS,CAAC;SACvF,CAAC;QAEF,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACrB,OAAO,QAAQ,CAAC,QAAQ,CAAC;QAC7B,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;YAC1B,OAAO,QAAQ,CAAC,aAAa,CAAC;QAClC,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC;YACtB,OAAO,QAAQ,CAAC,SAAS,CAAC;QAC9B,CAAC;QACD,IAAI,CAAC,QAAQ,CAAC,mBAAmB,EAAE,CAAC;YAChC,OAAO,QAAQ,CAAC,mBAAmB,CAAC;QACxC,CAAC;QAED,OAAO,QAAQ,CAAC;IACpB,CAAC;IAED;;OAEG;IACH,GAAG;QACC,OAAO,IAAI,CAAC;IAChB,CAAC;;AAvTL,gCAwTC","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\nimport * as Utils from '../Helpers/Utils';\nimport type {\n    AlexaV3Capability,\n    AlexaV3ContextProperty,\n    AlexaV3Directive,\n    AlexaV3DirectiveType,\n    AlexaV3DiscoverAppliance,\n    AlexaV3EndpointID,\n    AlexaV3Namespace,\n    AlexaV3Payload,\n    AlexaV3ReportedState,\n    AlexaV3Request,\n} from '../types';\n\n/**\n * Helper class to generate an AlexaResponse.\n */\nexport default class AlexaResponse {\n    public context?: {\n        properties: AlexaV3ReportedState[];\n    };\n\n    public iobVersion = '1';\n\n    public readonly event?: AlexaV3Directive;\n\n    static ErrorResponseName: AlexaV3DirectiveType = 'ErrorResponse';\n\n    static isErrorResponse(response: AlexaResponse): boolean {\n        return response?.event?.header?.name === AlexaResponse.ErrorResponseName;\n    }\n\n    static errorResponse(messageId: string, payload: any): AlexaResponse {\n        return new AlexaResponse({\n            name: AlexaResponse.ErrorResponseName,\n            payload,\n            messageId,\n        });\n    }\n\n    static endpointUnreachable(messageId: string): AlexaResponse {\n        return AlexaResponse.errorResponse(messageId, {\n            type: 'ENDPOINT_UNREACHABLE',\n            message: 'Unable to reach endpoint.',\n        });\n    }\n\n    static directiveNotSupportedByControl(\n        controlName: string,\n        namespace: AlexaV3Namespace,\n        messageId: string,\n        payloadVersion: string,\n    ): AlexaResponse {\n        return AlexaResponse.errorResponse(messageId, {\n            type: 'INTERNAL_ERROR',\n            message: `Control ${controlName} doesn't support the ${namespace} with payloadVersion ${payloadVersion}`,\n        });\n    }\n\n    static directiveNotSupportedByDevice(\n        deviceName: string,\n        namespace: AlexaV3Namespace,\n        messageId: string,\n        payloadVersion: string,\n    ): AlexaResponse {\n        return AlexaResponse.errorResponse(messageId, {\n            type: 'INTERNAL_ERROR',\n            message: `Device ${deviceName} doesn't support the ${namespace} with payloadVersion ${payloadVersion}`,\n        });\n    }\n\n    static nonExistingEndpoint(messageId: string, endpointId: AlexaV3EndpointID | undefined): AlexaResponse {\n        return AlexaResponse.errorResponse(messageId, {\n            type: 'INTERNAL_ERROR',\n            message: `No endpoint with id ${endpointId} found`,\n        });\n    }\n\n    /**\n     * Composes Alexa respond on a successfully processed Alexa directive to change the capability's value of a device\n     */\n    static handled(event: AlexaV3Request, propertyName: string, value: any, propertyInstance?: string): AlexaResponse {\n        const response = new AlexaResponse({\n            correlationToken: event?.directive?.header?.correlationToken,\n            token: event?.directive?.endpoint?.scope?.token,\n            endpointId: event?.directive?.endpoint?.endpointId,\n            messageId: event?.directive?.header?.messageId,\n        });\n\n        response.addContextProperty({\n            namespace: event?.directive?.header?.namespace,\n            name: propertyName,\n            instance: propertyInstance,\n            value,\n        });\n\n        return response;\n    }\n\n    /**\n     * Constructor for an Alexa Response.\n     *\n     * @param opts Contains initialization options for the response\n     */\n    constructor(opts?: {\n        context?: {\n            properties: AlexaV3ReportedState[];\n        };\n        namespace?: AlexaV3Namespace;\n        name?: AlexaV3DirectiveType;\n        messageId?: string;\n        correlationToken?: string;\n        payloadVersion?: '3';\n        token?: string;\n        endpointId?: string;\n        payload?: AlexaV3Payload;\n        changeCauseType?: 'APP_INTERACTION' | 'PHYSICAL_INTERACTION' | 'VOICE_INTERACTION';\n        event?: AlexaV3Directive;\n    }) {\n        opts ||= {};\n\n        if (opts.context !== undefined) {\n            this.context = Utils.defaultIfNullOrEmpty(opts.context, undefined);\n        }\n\n        if (opts.event !== undefined) {\n            this.event = Utils.defaultIfNullOrEmpty(opts.event, undefined);\n        } else {\n            this.event = {\n                header: {\n                    namespace: Utils.defaultIfNullOrEmpty<AlexaV3Namespace>(opts.namespace, 'Alexa'),\n                    name: Utils.defaultIfNullOrEmpty<AlexaV3DirectiveType>(opts.name, 'Response'),\n                    messageId: Utils.defaultIfNullOrEmpty(opts.messageId, uuidv4()),\n                    correlationToken: Utils.defaultIfNullOrEmpty(opts.correlationToken, undefined),\n                    payloadVersion: Utils.defaultIfNullOrEmpty<'3'>(opts.payloadVersion, '3'),\n                },\n                endpoint: {\n                    scope: {\n                        type: 'BearerToken',\n                        token: Utils.defaultIfNullOrEmpty(opts.token, 'INVALID'),\n                    },\n                    endpointId: Utils.defaultIfNullOrEmpty(opts.endpointId, 'INVALID'),\n                },\n                payload: Utils.defaultIfNullOrEmpty(opts.payload, {}),\n            };\n\n            if (opts.changeCauseType) {\n                this.event.payload.change = {\n                    cause: {\n                        type: opts.changeCauseType,\n                    },\n                    properties: [],\n                };\n            }\n        }\n\n        if (!this.event) {\n            throw new Error('Event is not defined');\n        }\n\n        // No endpoint in an AcceptGrant or Discover request\n        if (this.event.header.name === 'AcceptGrant.Response' || this.event.header.name === 'Discover.Response') {\n            delete this.event.endpoint;\n        }\n    }\n\n    addContext(): void {\n        this.context ||= { properties: [] };\n    }\n\n    /**\n     * Add a property to the context.\n     *\n     * @param opts Contains options for the property.\n     */\n    addContextProperty(opts: {\n        namespace?: AlexaV3Namespace;\n        instance?: string;\n        name?: string;\n        value?: any;\n        timeOfSample?: string;\n        uncertaintyInMilliseconds?: number;\n    }): void {\n        this.addContext();\n\n        const property = {\n            namespace: Utils.defaultIfNullOrEmpty(opts.namespace, 'Alexa.EndpointHealth'),\n            instance: Utils.defaultIfNullOrEmpty(opts.instance, undefined),\n            name: Utils.defaultIfNullOrEmpty(opts.name, 'connectivity'),\n            value: Utils.defaultIfNullOrEmpty(opts.value, { value: 'OK' }),\n            timeOfSample: Utils.defaultIfNullOrEmpty(opts.timeOfSample, new Date().toISOString()),\n            uncertaintyInMilliseconds: Utils.defaultIfNullOrEmpty(opts.uncertaintyInMilliseconds, 0),\n        };\n\n        if (!property.instance) {\n            delete property.instance;\n        }\n\n        this.context!.properties.push(property);\n    }\n\n    /**\n     * Add a property to the payload.\n     *\n     * @param opts Contains options for the property.\n     */\n    addPayloadChangeProperty(opts: AlexaV3ContextProperty): void {\n        opts ||= {} as AlexaV3ContextProperty;\n\n        const property = {\n            namespace: Utils.defaultIfNullOrEmpty(opts.namespace, 'Alexa.EndpointHealth'),\n            instance: Utils.defaultIfNullOrEmpty(opts.instance, undefined),\n            name: Utils.defaultIfNullOrEmpty(opts.name, 'connectivity'),\n            value: Utils.defaultIfNullOrEmpty(opts.value, { value: 'OK' }),\n            timeOfSample: Utils.defaultIfNullOrEmpty(opts.timeOfSample, new Date().toISOString()),\n            uncertaintyInMilliseconds: Utils.defaultIfNullOrEmpty(opts.uncertaintyInMilliseconds, 0),\n        };\n\n        if (!property.instance) {\n            delete property.instance;\n        }\n\n        if (!this.event) {\n            throw new Error('Event is not defined');\n        }\n        this.event.payload.change ||= { properties: [], cause: { type: 'APP_INTERACTION' } };\n\n        this.event.payload.change.properties.push(property);\n    }\n\n    static alexaCapability(): AlexaV3Capability[] {\n        return [\n            {\n                type: 'AlexaInterface',\n                interface: 'Alexa',\n                version: '3',\n            },\n        ];\n    }\n\n    /**\n     * Adds an endpoint to the payload.\n     *\n     * @param opts Contains options for the endpoint.\n     */\n    addPayloadEndpoint(opts: AlexaV3DiscoverAppliance): void {\n        if (!this.event) {\n            throw new Error('Event is not defined');\n        }\n\n        this.event.payload.endpoints ||= [];\n\n        opts ||= {} as AlexaV3DiscoverAppliance;\n\n        // construct the proper structure expected for the endpoint\n        const endpoint: AlexaV3DiscoverAppliance = {\n            endpointId: Utils.defaultIfNullOrEmpty(opts.endpointId, 'dummy-endpoint-001'),\n            manufacturerName: Utils.defaultIfNullOrEmpty(opts.manufacturerName, 'ioBroker Group'),\n            description: Utils.defaultIfNullOrEmpty(opts.description, 'Device controlled by ioBroker'),\n            friendlyName: Utils.defaultIfNullOrEmpty(opts.friendlyName, 'ioBroker Stub Endpoint'),\n            displayCategories: Utils.defaultIfNullOrEmpty(opts.displayCategories, ['OTHER']),\n            capabilities: AlexaResponse.alexaCapability().concat(\n                Utils.defaultIfNullOrEmpty<AlexaV3Capability[]>(opts.capabilities, []),\n            ),\n            cookie: undefined,\n        };\n\n        if (Object.prototype.hasOwnProperty.call(opts, 'cookie')) {\n            endpoint.cookie = Utils.defaultIfNullOrEmpty<Record<string, string>>(opts.cookie, {});\n        }\n\n        this.event.payload.endpoints.push(endpoint);\n    }\n\n    /**\n     * Creates a capability for an endpoint within the payload.\n     *\n     * @param opts Contains options for the endpoint capability.\n     */\n    asEndpointCapability(opts?: AlexaV3Capability): AlexaV3Capability {\n        opts ||= {} as AlexaV3Capability;\n\n        const response = {\n            type: Utils.defaultIfNullOrEmpty(opts.type, 'AlexaInterface'),\n            interface: Utils.defaultIfNullOrEmpty(opts.interface, 'Alexa'),\n            version: Utils.defaultIfNullOrEmpty(opts.version, '3'),\n            properties: Utils.defaultIfNullOrEmpty<{\n                supported: { name: string }[];\n                proactivelyReported?: boolean;\n                retrievable?: boolean;\n                nonControllable?: boolean;\n            }>(\n                opts.properties,\n                {} as {\n                    supported: { name: string }[];\n                    proactivelyReported?: boolean;\n                    retrievable?: boolean;\n                    nonControllable?: boolean;\n                },\n            ),\n            // not all capabilities have the following ones\n            instance: Utils.defaultIfNullOrEmpty(opts.instance, undefined),\n            configuration: Utils.defaultIfNullOrEmpty(opts.configuration, undefined),\n            semantics: Utils.defaultIfNullOrEmpty(opts.semantics, undefined),\n            capabilityResources: Utils.defaultIfNullOrEmpty(opts.capabilityResources, undefined),\n        };\n\n        if (!response.instance) {\n            delete response.instance;\n        }\n        if (!response.configuration) {\n            delete response.configuration;\n        }\n        if (!response.semantics) {\n            delete response.semantics;\n        }\n        if (!response.capabilityResources) {\n            delete response.capabilityResources;\n        }\n\n        return response;\n    }\n\n    /**\n     * Get the composed Alexa Response.\n     */\n    get(): AlexaResponse {\n        return this;\n    }\n}\n"]}