{"version":3,"file":"Base.js","sourceRoot":"","sources":["../../../../../src/lib/AlexaSmartHomeV3/Alexa/Directives/Base.ts"],"names":[],"mappings":";;;;;AAAA,kEAA0C;AAC1C,+CAAgD;AAKhD,MAAqB,IAAI;IACX,GAAG,CAAS;IAEtB;QACI,IAAI,CAAC,GAAG,GAAG,IAAI,gBAAM,CAAC,IAAI,CAAC,CAAC;IAChC,CAAC;IAED,MAAM,KAAK,SAAS;QAChB,OAAO,SAAS,IAAA,iBAAS,EAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAsB,CAAC;IACrE,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,OAAO,CAAC,KAAqB;QAChC,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC;IAClE,CAAC;IAED,MAAM,CAAC,MAAsB,EAAE,gBAA+B;QAC1D,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACjC,CAAC;CACJ;AAvBD,uBAuBC","sourcesContent":["import Logger from '../../Helpers/Logger';\nimport { className } from '../../Helpers/Utils';\nimport type { AlexaV3Namespace, AlexaV3Request } from '../../types';\nimport type AlexaResponse from '../AlexaResponse';\nimport type DeviceManager from '../../DeviceManager';\n\nexport default class Base {\n    protected log: Logger;\n\n    constructor() {\n        this.log = new Logger(this);\n    }\n\n    static get namespace(): AlexaV3Namespace {\n        return `Alexa.${className(this.toString())}` as AlexaV3Namespace;\n    }\n\n    /**\n     * Checks whether the directive matches, i.e., can handle the event Alexa sends to the skill\n     *\n     * @param event Contains the Alexa event.\n     */\n    static matches(event: AlexaV3Request): boolean {\n        return event?.directive?.header?.namespace === this.namespace;\n    }\n\n    handle(_event: AlexaV3Request, _endpointManager: DeviceManager): Promise<null | AlexaResponse> {\n        return Promise.resolve(null);\n    }\n}\n"]}