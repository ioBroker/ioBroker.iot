{"version":3,"file":"ThermostatController.js","sourceRoot":"","sources":["../../../../../src/lib/AlexaSmartHomeV3/Alexa/Capabilities/ThermostatController.ts"],"names":[],"mappings":";;;;;AAAA,kFAA0D;AAC1D,kFAA0D;AAC1D,kDAA0B;AAI1B,MAAqB,oBAAqB,SAAQ,cAAI;IAC1C,eAAe,CAA6B;IAEpD,IAAI,OAAO;QACP,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,cAAc;QACV,IAAI,CAAC,eAAe,GAAG,IAAI,wBAAc,EAAE,CAAC;QAC5C,OAAO,CAAC,IAAI,wBAAc,EAAE,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACxD,CAAC;IAED,IAAI,cAAc;QACd,OAAO,IAAI,CAAC,eAAgB,CAAC;IACjC,CAAC;IAED,IAAI,aAAa;QAsBb,OAAO;YACH,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,UAAU,EAAE,IAAI,CAAC,sBAAsB;YACvC,aAAa,EAAE,IAAI,CAAC,aAAa;SACpC,CAAC;IACN,CAAC;IAED,IAAI,aAAa;QAKb,OAAO;YACH,OAAO,EAAE,KAAK;YACd,cAAc,EAAE,IAAI,CAAC,eAAgB,CAAC,cAAc;SACvD,CAAC;IACN,CAAC;CACJ;AAxDD,uCAwDC","sourcesContent":["import ThermostatMode from '../Properties/ThermostatMode';\nimport TargetSetpoint from '../Properties/TargetSetpoint';\nimport Base from './Base';\nimport type { Base as PropertiesBase } from '../Properties/Base';\nimport type { AlexaV3ActionMapping, AlexaV3FriendlyName, AlexaV3Namespace, AlexaV3StateMapping } from '../../types';\n\nexport default class ThermostatController extends Base {\n    private _thermostatMode: ThermostatMode | undefined;\n\n    get version(): string {\n        return '3.2';\n    }\n\n    initProperties(): PropertiesBase[] {\n        this._thermostatMode = new ThermostatMode();\n        return [new TargetSetpoint(), this._thermostatMode];\n    }\n\n    get thermostatMode(): ThermostatMode {\n        return this._thermostatMode!;\n    }\n\n    get alexaResponse(): {\n        interface: AlexaV3Namespace;\n        version: string;\n        instance?: string;\n        properties: {\n            supported: { name: string }[];\n            proactivelyReported: boolean;\n            retrievable: boolean;\n        };\n        configuration?: {\n            ordered: boolean;\n            supportedModes: any[];\n            supportsScheduling?: boolean;\n        };\n        semantics?: {\n            actionMappings: AlexaV3ActionMapping[];\n            stateMappings: AlexaV3StateMapping[];\n        };\n        capabilityResources?: {\n            friendlyNames: AlexaV3FriendlyName[];\n        };\n    } {\n        return {\n            interface: this.namespace,\n            version: this.version,\n            properties: this.discoverableProperties,\n            configuration: this.configuration,\n        };\n    }\n\n    get configuration(): {\n        ordered: boolean;\n        supportedModes: string[];\n        supportsScheduling?: boolean;\n    } {\n        return {\n            ordered: false,\n            supportedModes: this._thermostatMode!.supportedModes,\n        };\n    }\n}\n"]}