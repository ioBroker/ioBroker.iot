{"version":3,"file":"ModeController.js","sourceRoot":"","sources":["../../../../../src/lib/AlexaSmartHomeV3/Alexa/Capabilities/ModeController.ts"],"names":[],"mappings":";;;;;AAAA,kDAA0B;AAE1B,8DAAsC;AAStC,MAAqB,cAAe,SAAQ,cAAI;IACpC,SAAS,CAAmB;IAEpC,cAAc;QACV,IAAI,CAAC,SAAS,GAAG,IAAI,cAAI,EAAE,CAAC;QAC5B,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC5B,CAAC;IAED;;OAEG;IACH,IAAI,aAAa;QACb,OAAO;YACH,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,UAAU,EAAE,IAAI,CAAC,sBAAsB;YACvC,aAAa,EAAE,IAAI,CAAC,gCAAgC;YACpD,SAAS,EAAE,IAAI,CAAC,4BAA4B;YAC5C,mBAAmB,EAAE,IAAI,CAAC,sCAAsC;SACnE,CAAC;IACN,CAAC;IAED,IAAI,sBAAsB;QAMtB,OAAO;YACH,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;gBAC/B,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC;YACpC,CAAC,CAAC;YACF,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;YAC7C,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,eAAe,EAAE,KAAK;SACzB,CAAC;IACN,CAAC;IAED,IAAI,sCAAsC;QAGtC,OAAO,EAAE,aAAa,EAAE,IAAI,CAAC,aAAa,EAAE,CAAC;IACjD,CAAC;IAED,IAAI,aAAa;QACb,OAAO;YACH;gBACI,OAAO,EAAE,OAAO;gBAChB,KAAK,EAAE;oBACH,OAAO,EAAE,oBAAoB;iBAChC;aACJ;SACJ,CAAC;IACN,CAAC;IAED,IAAI,QAAQ;QACR,OAAO,GAAG,IAAI,CAAC,SAAU,CAAC,QAAQ,EAAE,CAAC;IACzC,CAAC;IAED,IAAI,gCAAgC;QAIhC,OAAO;YACH,OAAO,EAAE,KAAK;YACd,cAAc,EAAE,IAAI,CAAC,SAAU,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,iBAAiB,CAAC;SACzF,CAAC;IACN,CAAC;IAED,IAAI,4BAA4B;QAI5B,OAAO;YACH,cAAc,EAAE,IAAI,CAAC,SAAU,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC;YACnF,aAAa,EAAE,IAAI,CAAC,SAAU,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC;SACpF,CAAC;IACN,CAAC;CACJ;AA/ED,iCA+EC","sourcesContent":["import Base from './Base';\nimport type { Base as PropertiesBase } from '../Properties/Base';\nimport Mode from '../Properties/Mode';\nimport type {\n    AlexaV3ActionMapping,\n    AlexaV3Capability,\n    AlexaV3DiscoveryResponse,\n    AlexaV3FriendlyName,\n    AlexaV3StateMapping,\n} from '../../types';\n\nexport default class ModeController extends Base {\n    private _property: Mode | undefined;\n\n    initProperties(): PropertiesBase[] {\n        this._property = new Mode();\n        return [this._property];\n    }\n\n    /**\n     * Returns response to Alexa Discovery directive\n     */\n    get alexaResponse(): AlexaV3Capability {\n        return {\n            interface: this.namespace,\n            instance: this.instance,\n            version: this.version,\n            properties: this.discoverableProperties,\n            configuration: this.configurationAsDiscoveryResponse,\n            semantics: this.semanticsAsDiscoveryResponse,\n            capabilityResources: this.capabilityResourcesAsDiscoveryResponse,\n        };\n    }\n\n    get discoverableProperties(): {\n        supported: { name: string }[];\n        proactivelyReported: boolean;\n        retrievable: boolean;\n        nonControllable: false;\n    } {\n        return {\n            supported: this.properties.map(p => {\n                return { name: p.propertyName };\n            }),\n            proactivelyReported: this.proactivelyReported,\n            retrievable: this.retrievable,\n            nonControllable: false,\n        };\n    }\n\n    get capabilityResourcesAsDiscoveryResponse(): {\n        friendlyNames: AlexaV3FriendlyName[];\n    } {\n        return { friendlyNames: this.friendlyNames };\n    }\n\n    get friendlyNames(): AlexaV3FriendlyName[] {\n        return [\n            {\n                '@type': 'asset',\n                value: {\n                    assetId: 'Alexa.Setting.Mode',\n                },\n            },\n        ];\n    }\n\n    get instance(): string {\n        return `${this._property!.instance}`;\n    }\n\n    get configurationAsDiscoveryResponse(): {\n        ordered: boolean;\n        supportedModes: AlexaV3DiscoveryResponse[];\n    } {\n        return {\n            ordered: false,\n            supportedModes: this._property!.supportedModes.flatMap(mode => mode.discoveryResponse),\n        };\n    }\n\n    get semanticsAsDiscoveryResponse(): {\n        actionMappings: AlexaV3ActionMapping[];\n        stateMappings: AlexaV3StateMapping[];\n    } {\n        return {\n            actionMappings: this._property!.supportedModes.flatMap(mode => mode.actionMappings),\n            stateMappings: this._property!.supportedModes.flatMap(mode => mode.stateMappings),\n        };\n    }\n}\n"]}