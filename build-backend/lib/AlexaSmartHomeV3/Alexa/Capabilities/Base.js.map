{"version":3,"file":"Base.js","sourceRoot":"","sources":["../../../../../src/lib/AlexaSmartHomeV3/Alexa/Capabilities/Base.ts"],"names":[],"mappings":";;;AAAA,+CAAgD;AAIhD,MAAa,IAAI;IACG,WAAW,CAAmB;IAE9C;QACI,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;IAC7C,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;IACtC,CAAC;IAED,IAAI,SAAS;QACT,OAAO,SAAS,IAAI,CAAC,WAAW,CAAC,IAAI,EAAsB,CAAC;IAChE,CAAC;IAED,WAAW,CAAC,KAAuB;QAC/B,OAAO,KAAK,CAAC;IACjB,CAAC;IAED,cAAc;QACV,OAAO,EAAE,CAAC;IACd,CAAC;IAED;;;;OAIG;IACH,OAAO,CAAC,KAAqB;QACzB,OAAO,CACH,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,KAAK,IAAI,CAAC,SAAS;YACtD,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,cAAc,KAAK,IAAI,CAAC,OAAO,CAC5D,CAAC;IACN,CAAC;IAED,MAAM,KAAK,SAAS;QAChB,OAAO,SAAS,IAAA,iBAAS,EAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,EAAsB,CAAC;IACrE,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,OAAO,CAAC,KAAqB;QAChC,OAAO,KAAK,EAAE,SAAS,EAAE,MAAM,EAAE,SAAS,KAAK,IAAI,CAAC,SAAS,CAAC;IAClE,CAAC;IAED,IAAI,UAAU;QACV,OAAO,IAAI,CAAC,WAAW,CAAC;IAC5B,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,KAAqB;QAC1B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC;IACvD,CAAC;IAED;;OAEG;IACH,IAAI,sBAAsB;QAKtB,OAAO;YACH,SAAS,EAAE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE;gBAC/B,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC,YAAY,EAAE,CAAC;YACpC,CAAC,CAAC;YACF,mBAAmB,EAAE,IAAI,CAAC,mBAAmB;YAC7C,WAAW,EAAE,IAAI,CAAC,WAAW;SAChC,CAAC;IACN,CAAC;IAED;;OAEG;IACH,IAAI,mBAAmB;QACnB,OAAO,IAAI,CAAC;IAChB,CAAC;IAED;;OAEG;IACH,IAAI,WAAW;QACX,OAAO,IAAI,CAAC;IAChB,CAAC;IAED,IAAI,OAAO;QACP,OAAO,GAAG,CAAC;IACf,CAAC;IAED;;OAEG;IACH,IAAI,aAAa;QACb,OAAO;YACH,SAAS,EAAE,IAAI,CAAC,SAAS;YACzB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,UAAU,EAAE,IAAI,CAAC,sBAAsB;SAC1C,CAAC;IACN,CAAC;IAED,YAAY,CAAC,KAAqB;QAC9B,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,YAAY,CAAC;IAC9C,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,KAAqB;QAC5B,MAAM,IAAI,KAAK,CAAC,2CAA2C,IAAI,CAAC,IAAI,aAAa,CAAC,CAAC;QACnF,iCAAiC;QACjC,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,UAAU,CAAC,KAAK,CAAC,CAAC;IACnD,CAAC;IAED;;OAEG;IACH,MAAM,CAAC,UAAU,CAAC,KAAqB;QACnC,OAAO,KAAK,CAAC,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC;IAChD,CAAC;CACJ;AA9HD,oBA8HC;AAED,kBAAe,IAAI,CAAC","sourcesContent":["import { className } from '../../Helpers/Utils';\nimport type { AlexaV3Capability, AlexaV3EndpointID, AlexaV3Namespace, AlexaV3Request } from '../../types';\nimport type { Base as PropertiesBase } from '../Properties/Base';\n\nexport class Base {\n    public readonly _properties: PropertiesBase[];\n\n    constructor() {\n        this._properties = this.initProperties();\n    }\n\n    get name(): string {\n        return `${this.constructor.name}`;\n    }\n\n    get namespace(): AlexaV3Namespace {\n        return `Alexa.${this.constructor.name}` as AlexaV3Namespace;\n    }\n\n    reportValue(value: number | boolean): any {\n        return value;\n    }\n\n    initProperties(): PropertiesBase[] {\n        return [];\n    }\n\n    /**\n     * Checks whether the capability instance matches, i.e. can handle the event Alexa sends to the skill\n     *\n     * @param event Contains the Alexa event.\n     */\n    matches(event: AlexaV3Request): boolean {\n        return (\n            event?.directive?.header?.namespace === this.namespace &&\n            event?.directive?.header?.payloadVersion === this.version\n        );\n    }\n\n    static get namespace(): AlexaV3Namespace {\n        return `Alexa.${className(this.toString())}` as AlexaV3Namespace;\n    }\n\n    /**\n     * Checks whether the capability object matches, i.e., can handle the event Alexa sends to the skill\n     *\n     * @param event Contains the Alexa event.\n     */\n    static matches(event: AlexaV3Request): boolean {\n        return event?.directive?.header?.namespace === this.namespace;\n    }\n\n    get properties(): PropertiesBase[] {\n        return this._properties;\n    }\n\n    /**\n     *\n     * @param event Contains the Alexa event.\n     * @returns Property to handle on Alexa directive\n     */\n    property(event: AlexaV3Request): PropertiesBase | undefined {\n        return this.properties.find(p => p.matches(event));\n    }\n\n    /**\n     * Returns object containing all the properties of the smart device capability as it expected by Alexa during discovery\n     */\n    get discoverableProperties(): {\n        supported: { name: string }[];\n        proactivelyReported: boolean;\n        retrievable: boolean;\n    } {\n        return {\n            supported: this.properties.map(p => {\n                return { name: p.propertyName };\n            }),\n            proactivelyReported: this.proactivelyReported,\n            retrievable: this.retrievable,\n        };\n    }\n\n    /**\n     * Returns whether the smart device proactively reports state changes\n     */\n    get proactivelyReported(): boolean {\n        return true;\n    }\n\n    /**\n     * Returns whether the smart device handles Alexa ReportState directives\n     */\n    get retrievable(): boolean {\n        return true;\n    }\n\n    get version(): string {\n        return '3';\n    }\n\n    /**\n     * Returns response to Alexa Discovery directive\n     */\n    get alexaResponse(): AlexaV3Capability {\n        return {\n            interface: this.namespace,\n            version: this.version,\n            properties: this.discoverableProperties,\n        };\n    }\n\n    propertyName(event: AlexaV3Request): string | undefined {\n        return this.property(event)?.propertyName;\n    }\n\n    /**\n     * Extracts value to be set on the smart device sent in an Alexa directive\n     */\n    alexaValue(event: AlexaV3Request): number | boolean | undefined {\n        throw new Error(`Method alexaValue is not implemented in ${this.name} capability`);\n        // @ts-expect-error fix later!!!!\n        return this.property(event)?.alexaValue(event);\n    }\n\n    /**\n     * Extracts endpoint id sent in an Alexa directive\n     */\n    static endpointId(event: AlexaV3Request): AlexaV3EndpointID | undefined {\n        return event.directive.endpoint?.endpointId;\n    }\n}\n\nexport default Base;\n"]}