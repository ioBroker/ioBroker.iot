{"version":3,"file":"AdjustableControl.js","sourceRoot":"","sources":["../../../../src/lib/AlexaSmartHomeV3/Controls/AdjustableControl.ts"],"names":[],"mappings":";;;;;AAAA,wDAAgC;AAChC,mDAAkE;AAGlE,MAAqB,iBAAkB,SAAQ,iBAAO;IAClD,oBAAoB;QAChB,OAAO,EAAE,CAAC;IACd,CAAC;IAED,iBAAiB,CAAC,KAAqB;QACnC,OAAO,IAAI,CAAC,oBAAoB,EAAE,CAAC,IAAI,CACnC,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,WAAc,CAAC,MAAM,CAC7F,CAAC;IACN,CAAC;IAED,WAAW,CACP,KAAqB;QAErB,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAClG,CAAC;CACJ;AAhBD,oCAgBC","sourcesContent":["import Control from './Control';\nimport { Base as PropertiesBase } from '../Alexa/Properties/Base';\nimport type { AlexaV3DirectiveValue, AlexaV3Request } from '../types';\n\nexport default class AdjustableControl extends Control {\n    adjustableProperties(): (typeof PropertiesBase)[] {\n        return [];\n    }\n\n    isAdjustDirective(event: AlexaV3Request): boolean {\n        return this.adjustableProperties().some(\n            property => property.matches(event) && property.directive(event) === PropertiesBase.ADJUST,\n        );\n    }\n\n    valueSetter(\n        event: AlexaV3Request,\n    ): (event: AlexaV3Request, property: PropertiesBase) => Promise<AlexaV3DirectiveValue> {\n        return this.isAdjustDirective(event) ? this.adjustValue.bind(this) : super.valueSetter(event);\n    }\n}\n"]}